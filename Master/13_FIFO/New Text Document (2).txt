module tb;

parameter WIDTH=8;
parameter DEPTH=16;
parameter PTR_WIDTH=4;

reg clk, rst, wr_en, rd_en;
reg [WIDTH-1:0]wdata;
wire full, empty, wr_err, rd_err;
wire [WIDTH-1:0]rdata;
integer i;
reg [30*8:1]testname;


fifo dut ( clk, rst, wr_en, full, wdata, wr_err, rd_en, empty, rdata, rd_err);

initial begin
	clk=0;
	forever #5 clk=~clk;

end

initial begin
	$value$plusargs("testname=%s", testname);
  $display("testname=%s", testname);
	rst=1;
	wr_en=0;
	rd_en=0;
	wdata=0;
  repeat(2)@(posedge clk);
	rst=0;

	case(testname)
		"test_fifo_full_err":begin
          write_fifo(DEPTH+1);
		end
		"test_fifo_full": begin
			write_fifo(DEPTH);
		end
		"test_empty_error":begin
          write_fifo(10);
          read_fifo(12);
		end
		"test_fifo_empty":begin
          write_fifo(10);
          read_fifo(7);
          write_fifo(10);
         read_fifo(13);
         write_fifo(3);
		end

	endcase

	#100;
	$finish;


end


task write_fifo(input integer num);
	begin
		for(i=0; i<num; i=i+1)begin
			@(posedge clk);
			wr_en=1;
			wdata=$random;
		end
		@(posedge clk);
		wr_en=0;
		wdata=0;
	end
endtask
task read_fifo(input integer num);
	begin
		for(i=0; i<num; i=i+1)begin
			@(posedge clk);
			rd_en=1;
		end
		@(posedge clk);
		rd_en=0;
	end
endtask
  
  initial begin
    $dumpfile("test.vcd");
    $dumpvars(2);
    
  end

endmodule 

/*module tb;

parameter WIDTH=8;
parameter DEPTH=16;
parameter PTR_WIDTH=4;

reg clk, rst, wr_en, rd_en;
reg [WIDTH-1:0]wdata;
wire full, empty, wr_err, rd_err;
wire [WIDTH-1:0]rdata;
integer i;
//reg [30*8:1]testname;


fifo dut ( clk, rst, wr_en, full, wdata, wr_err, rd_en, empty, rdata, rd_err);

initial begin
	clk=0;
	forever #5 clk=~clk;

end

initial begin
	
	rst=1;
	wr_en=0;
	rd_en=0;
	wdata=0;
  repeat(2)@(posedge clk);
	rst=0;

//write
  for(i=0; i<DEPTH; i=i+1)begin
			@(posedge clk);
			wr_en=1;
			wdata=$random;
		end
		@(posedge clk);
		wr_en=0;
		wdata=0;

  for(i=0; i<DEPTH; i=i+1)begin
			@(posedge clk);
			rd_en=1;
		end
		@(posedge clk);
		rd_en=0;
  
  #100;
	$finish;
end
  
  initial begin
    $dumpfile("test.vcd");
    $dumpvars(2);
    
  end
endmodule
*/
